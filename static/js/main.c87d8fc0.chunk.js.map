{"version":3,"sources":["components/App.jsx","actions/index.js","constants.js","reducers/index.js","index.js"],"names":["app","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","text","dueDate","console","log","addReminder","id","deleteReminder","_this2","reminders","react_default","a","createElement","className","map","reminder","key","moment","Date","fromNow","onClick","_this3","type","onChange","event","setState","target","value","vlaue","placeholder","renderReminder","clearReminders","React","Component","connect","action","arguments","length","undefined","read_cookie","toConsumableArray","concat","Math","random","bake_cookie","filter","removeById","store","createStore","reducer","ReactDOM","render","es","App","document","getElementById"],"mappings":"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","file":"static/js/main.c87d8fc0.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {addReminder, deleteReminder, clearReminders} from '../actions';\nimport moment from 'moment';\n\nclass app extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      text:'',\n      dueDate:''\n    };\n  }\n\n\n  addReminder(){\n    console.log('this.state.dueDate', this.state.dueDate);\n    this.props.addReminder(this.state.text, this.state.dueDate);\n  }\n  deleteReminder(id){\n    this.props.deleteReminder(id);\n\n  }\n  renderReminder(){\n    const {reminders} = this.props;\n    return(\n      <ul className=\"list-group col-sm-4\">\n        {\n          reminders.map(reminder =>{\n            return(\n              <li key={reminder.id} className=\"list-group-item\">\n                <div className=\"list-item\">\n                  <div>{reminder.text}</div>\n                  <div><em>{moment(new Date(reminder.dueDate)).fromNow()}</em></div>\n                </div>\n                <div\n                  className=\"list-item delete-button\"\n                  onClick={()=>this.deleteReminder(reminder.id)}\n                  >&#x2715;\n                </div>\n              </li>\n            )\n          })\n\n        }\n      </ul>\n    )\n  }\n\n  render(){\n    console.log('this.props', this.props);\n    return(\n       <div className=\"app\">\n         <div className=\"title\">\n           <h1>Reminder Pro</h1>\n         </div>\n         <div className=\"form-inline reminder-form\">\n           <div className=\"form-group\">\n             <input\n                type=\"text\"\n                className=\"form-control\"\n                onChange={event => this.setState({text:event.target.value})}\n                vlaue=\"\" placeholder=\"i want to...\"\n                />\n             <input\n               className=\"form-control\"\n               type=\"datetime-local\"\n               onChange={event =>this.setState({dueDate:event.target.value})}\n               />\n           </div>\n\n           <button\n             type=\"button\"\n             className=\"btn btn-success\"\n             onClick={()=>this.addReminder()}\n             id=\"button\">Add Reminder\n           </button>\n\n         </div><br/>\n       {this.renderReminder()}\n       <div\n         className=\"btn btn-danger\"\n         onClick={()=>this.props.clearReminders()}\n         >\n         Clear Reminders\n       </div>\n       </div>\n    )\n  }\n}\nfunction mapToProps(state){\n  return{\n    reminders:state\n  }\n}\n\nexport default connect(mapToProps, {addReminder, deleteReminder, clearReminders})(app);\n","import {ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS} from '../constants';\n\nexport const addReminder = (text, dueDate)=>{\n  const action = {\n    type:ADD_REMINDER,\n    text,\n    dueDate\n  }\n  console.log('action in addReminder', action);\n  return action;\n}\n\nexport const deleteReminder = (id) =>{\n  const action ={\n    type:DELETE_REMINDER,\n    id\n  }\n  console.log('this is actions', action);\n  return action\n}\nexport const clearReminders = ()=>{\n  return{\n    type:CLEAR_REMINDERS\n  }\n}\n","export const ADD_REMINDER ='ADD_REMINDER';\nexport const DELETE_REMINDER = 'DELETE_REMINDER';\nexport const CLEAR_REMINDERS = 'CLEAR_REMINDERS';\n","import {ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS} from '../constants';\nimport {bake_cookie, read_cookie} from 'sfcookies';\n\nconst reminder =(action)=>{\n  let {text, dueDate} = action;\n  return{\n    id: Math.random(),\n    text,\n    dueDate\n\n  }\n}\nconst removeById = (state=[], id) =>{\n  const reminders = state.filter(reminder =>reminder.id !== id);\n  console.log('reduced reminders', reminders);\n  return reminders;\n}\n\nconst reminders = (state = [], action)=>{\n  let reminders = null;\n  state = read_cookie('reminders');\n\n  switch (action.type) {\n    case ADD_REMINDER:\n    reminders = [...state, reminder(action)];\n    bake_cookie('reminders', reminders);\n    return reminders;\n\n      break;\n      case DELETE_REMINDER:\n      reminders = removeById(state, action.id);\n      bake_cookie('reminders', reminders);\n      return reminders;\n\n        break;\n        case CLEAR_REMINDERS:\n        reminders = [];\n        bake_cookie('reminders', reminders);\n        return reminders;\n\n          break;\n    default: return state;\n\n  }\n}\nexport default reminders;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport reducer from './reducers';\nimport './index.css';\n\nconst store = createStore(reducer);\n\n\nReactDOM.render(\n  <Provider store={store}>\n  <App/>\n  </Provider>\n  ,document.getElementById('root'));\n"],"sourceRoot":""}